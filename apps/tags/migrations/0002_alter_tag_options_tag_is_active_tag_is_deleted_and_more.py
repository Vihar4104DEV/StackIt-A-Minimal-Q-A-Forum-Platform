# Generated by Django 5.2.4 on 2025-07-12 07:58

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('tags', '0001_initial'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='tag',
            options={'ordering': ['-usage_count', 'name'], 'verbose_name': 'Tag', 'verbose_name_plural': 'Tags'},
        ),
        migrations.AddField(
            model_name='tag',
            name='is_active',
            field=models.BooleanField(db_index=True, default=True, help_text='Whether this record is active'),
        ),
        migrations.AddField(
            model_name='tag',
            name='is_deleted',
            field=models.BooleanField(db_index=True, default=False, help_text='Soft delete flag - record is marked as deleted but not removed from database'),
        ),
        migrations.AddField(
            model_name='tag',
            name='is_featured',
            field=models.BooleanField(db_index=True, default=False, help_text='Whether this is a featured tag'),
        ),
        migrations.AddField(
            model_name='tag',
            name='is_moderated',
            field=models.BooleanField(db_index=True, default=False, help_text='Whether this tag requires moderation'),
        ),
        migrations.AddField(
            model_name='tag',
            name='synonym_of',
            field=models.ForeignKey(blank=True, help_text='If this tag is a synonym of another tag', null=True, on_delete=django.db.models.deletion.SET_NULL, to='tags.tag'),
        ),
        migrations.AddField(
            model_name='tag',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, db_index=True, help_text='Timestamp when the record was last updated'),
        ),
        migrations.AlterField(
            model_name='tag',
            name='color',
            field=models.CharField(default='#007bff', help_text='Hex color code for the tag', max_length=7),
        ),
        migrations.AlterField(
            model_name='tag',
            name='created_at',
            field=models.DateTimeField(db_index=True, default=django.utils.timezone.now, help_text='Timestamp when the record was created'),
        ),
        migrations.AlterField(
            model_name='tag',
            name='description',
            field=models.TextField(blank=True, help_text='Tag description'),
        ),
        migrations.AlterField(
            model_name='tag',
            name='name',
            field=models.CharField(db_index=True, help_text='Tag name (must be unique)', max_length=50, unique=True),
        ),
        migrations.AlterField(
            model_name='tag',
            name='usage_count',
            field=models.PositiveIntegerField(db_index=True, default=0, help_text='Number of questions using this tag'),
        ),
        migrations.AddIndex(
            model_name='tag',
            index=models.Index(fields=['name'], name='tags_name_38920e_idx'),
        ),
        migrations.AddIndex(
            model_name='tag',
            index=models.Index(fields=['usage_count'], name='tags_usage_c_26dec2_idx'),
        ),
        migrations.AddIndex(
            model_name='tag',
            index=models.Index(fields=['is_featured'], name='tags_is_feat_063ff4_idx'),
        ),
        migrations.AddIndex(
            model_name='tag',
            index=models.Index(fields=['is_moderated'], name='tags_is_mode_fdbb46_idx'),
        ),
        migrations.AddIndex(
            model_name='tag',
            index=models.Index(fields=['synonym_of'], name='tags_synonym_387af6_idx'),
        ),
        migrations.AddIndex(
            model_name='tag',
            index=models.Index(fields=['usage_count', 'name'], name='tags_usage_c_3f9b4e_idx'),
        ),
        migrations.AddIndex(
            model_name='tag',
            index=models.Index(fields=['is_active', 'usage_count'], name='tags_is_acti_0d8ee6_idx'),
        ),
        migrations.AddIndex(
            model_name='tag',
            index=models.Index(fields=['is_active', 'is_featured'], name='tags_is_acti_19307f_idx'),
        ),
    ]
