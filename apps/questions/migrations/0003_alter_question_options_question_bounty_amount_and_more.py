# Generated by Django 5.2.4 on 2025-07-12 07:58

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('questions', '0002_initial'),
        ('tags', '0002_alter_tag_options_tag_is_active_tag_is_deleted_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='question',
            options={'ordering': ['-created_at'], 'verbose_name': 'Question', 'verbose_name_plural': 'Questions'},
        ),
        migrations.AddField(
            model_name='question',
            name='bounty_amount',
            field=models.PositiveIntegerField(default=0, help_text='Bounty amount for the question'),
        ),
        migrations.AddField(
            model_name='question',
            name='bounty_expires_at',
            field=models.DateTimeField(blank=True, help_text='When the bounty expires', null=True),
        ),
        migrations.AddField(
            model_name='question',
            name='is_active',
            field=models.BooleanField(db_index=True, default=True, help_text='Whether this record is active'),
        ),
        migrations.AddField(
            model_name='question',
            name='is_deleted',
            field=models.BooleanField(db_index=True, default=False, help_text='Soft delete flag - record is marked as deleted but not removed from database'),
        ),
        migrations.AddField(
            model_name='question',
            name='is_featured',
            field=models.BooleanField(db_index=True, default=False, help_text='Whether this is a featured question'),
        ),
        migrations.AlterField(
            model_name='question',
            name='author',
            field=models.ForeignKey(help_text='User who asked the question', on_delete=django.db.models.deletion.CASCADE, related_name='questions', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='question',
            name='content',
            field=models.TextField(help_text='Question content/body'),
        ),
        migrations.AlterField(
            model_name='question',
            name='created_at',
            field=models.DateTimeField(db_index=True, default=django.utils.timezone.now, help_text='Timestamp when the record was created'),
        ),
        migrations.AlterField(
            model_name='question',
            name='is_answered',
            field=models.BooleanField(db_index=True, default=False, help_text='Whether the question has an accepted answer'),
        ),
        migrations.AlterField(
            model_name='question',
            name='is_closed',
            field=models.BooleanField(db_index=True, default=False, help_text='Whether the question is closed for new answers'),
        ),
        migrations.AlterField(
            model_name='question',
            name='tags',
            field=models.ManyToManyField(blank=True, help_text='Tags associated with the question', related_name='questions', to='tags.tag'),
        ),
        migrations.AlterField(
            model_name='question',
            name='title',
            field=models.CharField(db_index=True, help_text='Question title', max_length=300),
        ),
        migrations.AlterField(
            model_name='question',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, db_index=True, help_text='Timestamp when the record was last updated'),
        ),
        migrations.AlterField(
            model_name='question',
            name='views',
            field=models.PositiveIntegerField(db_index=True, default=0, help_text='Number of views for this question'),
        ),
        migrations.AlterField(
            model_name='question',
            name='votes',
            field=models.IntegerField(db_index=True, default=0, help_text='Net vote count (upvotes - downvotes)'),
        ),
        migrations.AddIndex(
            model_name='question',
            index=models.Index(fields=['title'], name='questions_title_ef6180_idx'),
        ),
        migrations.AddIndex(
            model_name='question',
            index=models.Index(fields=['author'], name='questions_author__4010d7_idx'),
        ),
        migrations.AddIndex(
            model_name='question',
            index=models.Index(fields=['views'], name='questions_views_0b999c_idx'),
        ),
        migrations.AddIndex(
            model_name='question',
            index=models.Index(fields=['votes'], name='questions_votes_c94bbe_idx'),
        ),
        migrations.AddIndex(
            model_name='question',
            index=models.Index(fields=['is_answered'], name='questions_is_answ_673faa_idx'),
        ),
        migrations.AddIndex(
            model_name='question',
            index=models.Index(fields=['is_closed'], name='questions_is_clos_3d6263_idx'),
        ),
        migrations.AddIndex(
            model_name='question',
            index=models.Index(fields=['is_featured'], name='questions_is_feat_b27cc3_idx'),
        ),
        migrations.AddIndex(
            model_name='question',
            index=models.Index(fields=['bounty_amount'], name='questions_bounty__5f8592_idx'),
        ),
        migrations.AddIndex(
            model_name='question',
            index=models.Index(fields=['author', 'created_at'], name='questions_author__572d82_idx'),
        ),
        migrations.AddIndex(
            model_name='question',
            index=models.Index(fields=['votes', 'created_at'], name='questions_votes_dab5ca_idx'),
        ),
        migrations.AddIndex(
            model_name='question',
            index=models.Index(fields=['views', 'created_at'], name='questions_views_7a5017_idx'),
        ),
        migrations.AddIndex(
            model_name='question',
            index=models.Index(fields=['is_answered', 'created_at'], name='questions_is_answ_b777b2_idx'),
        ),
        migrations.AddIndex(
            model_name='question',
            index=models.Index(fields=['is_active', 'is_answered'], name='questions_is_acti_5f8a03_idx'),
        ),
        migrations.AddIndex(
            model_name='question',
            index=models.Index(fields=['is_active', 'is_closed'], name='questions_is_acti_d8681d_idx'),
        ),
    ]
